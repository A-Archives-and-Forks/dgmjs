---
import StarlightPage from "@astrojs/starlight/components/StarlightPage.astro";
import Header from "@/components/header.astro";
import Footer from "@/components/footer.astro";
import Feature from "@/components/feature.astro";
import { siteConfig } from "../../site-config";
import App from "@/components/app/app";
import "@/styles/fonts.css";
import "@/styles/splash.css";
---

<StarlightPage
  hasSidebar={false}
  frontmatter={{
    template: "splash",
    title: `${siteConfig.name} | ${siteConfig.title}`,
    hero: {},
  }}
  class:list={["mx-auto"]}
>
  <Header />
  <div class="h-0 text-transparent font-hand">(to pre-load fonts)</div>
  <section class="w-full py-8 md:py-20">
    <div class="my-8">
      <div
        class="relative mx-auto w-full text-center text-3xl md:text-5xl font-bold tracking-tighter"
      >
        An infinite canvas with
        <span class="relative whitespace-nowrap"
          >smart shapes
          <div
            class="absolute right-0 -bottom-1 text-transparent border-green-400 opacity-50 whitespace-nowrap"
            style={{ borderBottomWidth: "12px" }}
          >
            smart shapes
          </div>
        </span>
      </div>
      <div class="flex justify-center pt-4">
        <p
          class="text-lg md:text-xl text-slate-500 text-center tracking-tighter max-w-2xl px-4"
        >
          {siteConfig.description}
        </p>
      </div>
    </div>
    <div class="flex items-center justify-center gap-4 pt-0 md:pt-4">
      <a
        href="/getting-started/quick-start"
        class="rounded-full font-medium py-3 w-48 !text-white bg-black no-underline text-sm flex justify-center"
        )}
      >
        Getting Started</a
      >
      <a
        href="https://dgm.sh"
        class="rounded-full font-medium py-3 no-underline w-48 flex gap-2 items-center justify-center text-sm bg-slate-200"
        target="_blank"
        )}
      >
        <img class="h-4 w-4" alt="logo" src="/logo-light.svg" />
        <span>DGM App</span>
      </a>
    </div>
  </section>

  <section class="my-10 justify-center hidden lg:flex px-2">
    <div class="relative w-full h-[640px]">
      <App client:only />
    </div>
  </section>

  <section class="md:my-10 flex justify-center lg:hidden">
    <div class="relative w-full border rounded-lg overflow-hidden">
      <img src="/images/cover.png" alt="" />
    </div>
  </section>

  <section id="features0" class="py-12 space-y-12">
    <div class="">
      <h2>Features</h2>
    </div>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      <Feature>
        <img
          slot="image"
          src="/images/feat-smart-shapes.png"
          alt="Smart shapes"
        />
        <div slot="title">Smart shapes</div>
        <div slot="description">
          Smart shapes help you easily create diagrams with complex notations
          and you can also define your-own smart shapes using <b>scripts</b>,
          <b>constraints</b>, and <b>extended properties</b>.
        </div>
      </Feature>
      <Feature>
        <img slot="image" src="/images/feat-props.png" alt="Collaboration" />
        <div slot="title">Extended properties</div>
        <div slot="description">
          Shapes can have extended properties. This allows additional metadata
          to be stored in the shapes, which can be used in scripts or
          constraints.
        </div>
      </Feature>
      <Feature>
        <img
          slot="image"
          src="/images/feat-constraints.png"
          alt="Constraints"
        />
        <div slot="title">Shape constraints</div>
        <div slot="description">
          Constraints are used to define the behavior of shapes. For example, a
          shape can be constrained to be aligned, hidden, sized or else.
        </div>
      </Feature>

      <Feature>
        <img slot="image" src="/images/feat-script.png" alt="Collaboration" />
        <div slot="title">Shape scripting</div>
        <div slot="description">
          Shapes can have scripts that can be used to define how the shape is
          drawn or outlined. The scripts are written in <a
            href="https://github.com/kanaka/mal"
            target="_blank">a simple Clojure-inspired LISP-like language</a
          >.
        </div>
      </Feature>
      <Feature>
        <img slot="image" src="/images/feat-hand-drawn.png" alt="Hand-drawn" />
        <div slot="title">Hand-drawn style</div>
        <div slot="description">
          Supports hand-drawn style shapes as well as solid stype. The reason
          for providing such diverse styles is to support <b>multi-fidelity</b>.
          It is better to draw low-fidelity pictures in a hand-drawn style, and
          high-fidelity pictures in a solid style. Hand-draw style is powered by <a
            href="https://roughjs.com/"
            target="_blank">roughjs</a
          >.
        </div>
      </Feature>
      <Feature>
        <img slot="image" src="/images/feat-collab.png" alt="Collaboration" />
        <div slot="title">Real-time collaboration</div>
        <div slot="description">
          Use the <a
            href="https://github.com/dgmjs/dgmjs/tree/main/packages/dgmjs-plugin-yjs"
            target="_blank">dgmjs's yjs plugin</a
          > for enable real-time collaboration in your app. It supports real-time
          synchronization of the documents as well as multiple cursors and selections.
        </div>
      </Feature>

      <Feature>
        <img slot="image" src="/images/feat-freehand.png" alt="Hand-drawn" />
        <div slot="title">Freehand drawing</div>
        <div slot="description">
          Supports freehand drawing on the canvas powered by <a
            href="https://github.com/steveruizok/perfect-freehand"
            >perfect-freehand</a
          >. This allows you to adjust the thinning and the taperness of the
          ends.
        </div>
      </Feature>
      <Feature>
        <img slot="image" src="/images/feat-export.png" alt="Hand-drawn" />
        <div slot="title">Image export</div>
        <div slot="description">
          Shapes on the canvas can be exported in PNG and SVG formats, and they
          can also be copied to the clipboard for direct pasting into other
          apps.
        </div>
      </Feature>
      <Feature>
        <img slot="image" src="/images/feat-pages.png" alt="Hand-drawn" />
        <div slot="title">Multiple pages</div>
        <div slot="description">
          Supports multiple pages in a single document and each page can have
          different page size. (infinite, 4:3, 16:9, etc.)
        </div>
      </Feature>

      <Feature>
        <img slot="image" src="/images/feat-dark-mode.png" alt="Hand-drawn" />
        <div slot="title">Dark mode</div>
        <div slot="description">
          Support dark mode and all colors are adaptive to light mode or dark
          mode. Even if you draw in light mode, it will be displayed in dark
          mode automatically.
        </div>
      </Feature>
      <Feature>
        <img slot="image" src="/images/feat-richtext.png" alt="Hand-drawn" />
        <div slot="title">Rich text</div>
        <div slot="description">
          Text shapes support rich text. Therefore, users can apply different
          styles such as bold, underline, italic, and even different colors to
          parts of the text.
        </div>
      </Feature>
      <Feature>
        <img slot="image" src="/images/feat-json.png" alt="Hand-drawn" />
        <div slot="title">JSON format</div>
        <div slot="description">
          Shapes on the canvas can be easily exported to or imported from JSON
          format. The JSON format is very simple and intuitive so it is easy to
          handle.
        </div>
      </Feature>
    </div>
  </section>
  <Footer />
</StarlightPage>
